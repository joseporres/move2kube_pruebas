apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: myproject-template
  generatename: ""
  namespace: ""
  selflink: ""
  uid: ""
  resourceversion: ""
  generation: 0
  creationtimestamp: "0001-01-01T00:00:00Z"
  deletiontimestamp: null
  deletiongraceperiodseconds: null
  labels: {}
  annotations: {}
  ownerreferences: []
  finalizers: []
  clustername: ""
  managedfields: []
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: ruby
      name: ruby
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: ruby
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: golang
      name: golang
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: golang
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: golang
          name: golang
        spec:
          containers:
            - image: index.docker.io/myproject/golang:latest
              imagePullPolicy: Always
              name: golang
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-maven
      name: java-maven
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: java-maven
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: java-maven
          name: java-maven
        spec:
          containers:
            - image: index.docker.io/myproject/java-maven:latest
              imagePullPolicy: Always
              name: java-maven
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-war
      name: java-war
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: java-war
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs
      name: nodejs
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: nodejs
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: django
      name: django
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: django
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-gradle
      name: java-gradle
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: java-gradle
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: java-gradle
          name: java-gradle
        spec:
          containers:
            - image: index.docker.io/myproject/java-gradle:latest
              imagePullPolicy: Always
              name: java-gradle
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-maven
      name: java-maven
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: java-maven
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: ruby
      name: ruby
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: ruby
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: ruby
          name: ruby
        spec:
          containers:
            - image: index.docker.io/myproject/ruby:latest
              imagePullPolicy: Always
              name: ruby
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: django
      name: django
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: django
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: django
          name: django
        spec:
          containers:
            - image: index.docker.io/myproject/django:latest
              imagePullPolicy: Always
              name: django
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: php
      name: php
    spec:
      ports:
        - name: port-8082
          port: 8082
          targetPort: 8082
      selector:
        move2kube.konveyor.io/service: php
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: python
      name: python
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: python
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rust
      name: rust
    spec:
      ports:
        - name: port-8085
          port: 8085
          targetPort: 8085
      selector:
        move2kube.konveyor.io/service: rust
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: php
      name: php
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: php
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: php
          name: php
        spec:
          containers:
            - image: index.docker.io/myproject/php:latest
              imagePullPolicy: Always
              name: php
              ports:
                - containerPort: 8082
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: python
      name: python
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: python
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: python
          name: python
        spec:
          containers:
            - image: index.docker.io/myproject/python:latest
              imagePullPolicy: Always
              name: python
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rust
      name: rust
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: rust
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: rust
          name: rust
        spec:
          containers:
            - image: index.docker.io/myproject/rust:latest
              imagePullPolicy: Always
              name: rust
              ports:
                - containerPort: 8085
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: golang
      name: golang
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: golang
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-gradle
      name: java-gradle
    spec:
      ports:
        - name: port-8080
          port: 8080
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: java-gradle
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-war
      name: java-war
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: java-war
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: java-war
          name: java-war
        spec:
          containers:
            - image: index.docker.io/myproject/java-war:latest
              imagePullPolicy: Always
              name: java-war
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs
      name: nodejs
    spec:
      replicas: ${{COMMON_REPLICAS}}
      selector:
        matchLabels:
          move2kube.konveyor.io/service: nodejs
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: nodejs
          name: nodejs
        spec:
          containers:
            - image: index.docker.io/myproject/nodejs:latest
              imagePullPolicy: Always
              name: nodejs
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
parameters:
  - name: COMMON_REPLICAS
    value: "2"
